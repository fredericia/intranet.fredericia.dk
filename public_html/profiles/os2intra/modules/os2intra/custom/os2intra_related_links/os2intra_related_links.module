<?php
/**
 * @file
 * Code for the KTC related links.
 */

/**
 * Implements hook_block_info().
 */
function os2intra_related_links_block_info() {
  $blocks = array();

  $blocks['related_links_block'] = array(
    'info' => t('Relaterede links block'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function os2intra_related_links_block_view($delta = '') {
  $block = array();
  switch ($delta) {

    case 'related_links_block':
      $block['subject'] = t('Relaterede sider');
      $block['content'] = _os2intra_related_links_block_content();
      break;
  }
  return $block;

}

/**
 * KTC block view content callback.
 */
function _os2intra_related_links_block_content() {
  $related_links = array();
  $node = FALSE;
  $nid = arg(1);
  $output = '';
  if (is_numeric($nid)) {
    $node = node_load($nid);
  }
  else {
    return $related_links;
  }

  // Get all related links, manually typed in on node
  if ($field_related_links = field_get_items('node', $node, 'field_os2web_base_field_ref')) {

    foreach ($field_related_links as $field_related_link) {

      $link_node = node_load($field_related_link['target_id']);

      $related_links[$link_node->nid] = array(
        'nid'   => $link_node->nid,
        'title' => $link_node->title,
        'type'  => $link_node->type,
        'class' => 'manual',
      );
    }
  }

  // Get all related links related to the KLE number on the node,
  // term number topic, tags. Only get
  // these if the checkbox "Skjul relaterede links" isn't checked.
  if (($node && (!$hide_link = field_get_items('node', $node, 'field_os2web_base_field_hidlinks')))
    || ($node && ($hide_link = field_get_items('node', $node, 'field_os2web_base_field_hidlinks')) && !$hide_link[0]['value'])
  ) {

    if ($kle_items = field_get_items('node', $node, 'field_os2web_base_field_kle_ref')) {
      foreach ($kle_items as $kle) {
        // Get all nodes which have the same KLE number as this node.
        $query = new EntityFieldQuery();
        $result = $query->entityCondition('entity_type', 'node')
          ->propertyCondition('status', 1)
          ->entityCondition('bundle', array(
            'hearing',
            'group',
            'document'
          ), 'NOT IN')
          ->fieldCondition('field_os2web_base_field_kle_ref', 'tid', $kle['tid'])
          ->propertyOrderBy('created', 'ASC')
          ->range(0, 10)
          ->execute();
        if (isset($result['node'])) {
          foreach ($result['node'] as $link) {
            // Be sure to skip links which already is in list, or links to
            // current node.
            if (isset($related_links[$link->nid]) || ($node && $node->nid == $link->nid)) {
              continue;
            }
            $link_node = node_load($link->nid);
            if ($link_node) {
              $related_links[$link->nid] = array(
                'nid'   => $link->nid,
                'title' => $link_node->title,
                'class' => 'kle-link',
              );
            }

          }
        }
      }
    }

    // Get tags nodes.
    if ($tags_items = field_get_items('node', $node, 'field_os2web_base_field_edi_tags')) {
      foreach ($tags_items as $item) {
        // Get all nodes which have the same KLE number as this node.
        $query = new EntityFieldQuery();
        $result = $query->entityCondition('entity_type', 'node')
          ->propertyCondition('status', 1)
          ->entityCondition('bundle', array('hearing', 'group'), 'NOT IN')
          ->fieldCondition('field_os2web_base_field_edi_tags', 'tid', $item['tid'])
          ->propertyOrderBy('created', 'ASC')
          ->range(0, 10)
          ->execute();
        if (isset($result['node'])) {
          foreach ($result['node'] as $link) {
            // Be sure to skip links which already is in list, or links to
            // current node.
            if (isset($related_links[$link->nid]) || ($node && $node->nid == $link->nid)) {
              continue;
            }
            $link_node = node_load($link->nid);
            if ($link_node) {
              $related_links[$link->nid] = array(
                'nid'   => $link->nid,
                'title' => $link_node->title,
                'type'  => $link_node->type,
                'class' => 'tags-link',
              );
            }
          }
        }
      }
    }
  }

  $max_number_of_items = 25;
  if (count($related_links) > $max_number_of_items) {
    $related_links = array_slice($related_links, 0, $max_number_of_items);
  }

  if (!empty($related_links)) {
    $output = os2intra_related_links_make_markup($related_links);
  }
  return $output;
}

/**
 * Make block links markup.
 */
function os2intra_related_links_make_markup($related_links) {
  $output = '<ul class="os2-related-links">';

  foreach ($related_links as $key => $link) {

    if (!empty($link['type'])) {
      $output .= '<li class="related-link-type-' . $link['type'] . '">';
    }
    else {
      $output .= '<li>';
    }

    if (isset($link['url'])) {
      $output .= l($link['title'], $link['url'], array('attributes' => array('class' => $link['class'])));
    }
    else {
      $output .= l($link['title'], drupal_get_path_alias('node/' . $link['nid']), array('attributes' => array('class' => $link['class'])));
    }
    $output .= '</li>';

  }
  $output .= '</ul>';

  return $output;
}
